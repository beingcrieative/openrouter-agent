[
    {
        "url": "https://docs.convex.dev/production",
        "content": "# Deploying Your App to Production\nConvex is built to serve live, production app traffic. Here we cover how to deploy and maintain a production version of your app.\n\n## Project management[](#project-management)\nWhen you sign up for Convex, a Convex team is created for you. You can\n[create more teams from the dashboard](/dashboard/teams) and add other\npeople to them as members. You can upgrade your team to the\n[Pro plan](https://www.convex.dev/plans) for additional features, higher limits\nand usage-based pricing.\n\nEach team can have multiple projects. When you run `npx convex dev`\nfor the\nfirst time, a project is created for you automatically. You can also create a\nproject from the dashboard.\n\nEvery project has one shared production deployment and one development deployment per team member. This allows each team member to make and test changes independently before they are deployed to the production deployment.\n\nUsually all deployments belonging to a single project run the same code base (or\na version of it), but Convex doesn't enforce this. You can also run the same\ncode base on multiple different prod deployments belonging to different\nprojects, see [staging](#staging-environment) below.\n\n## Deploying to production[](#deploying-to-production)\nYour Convex deployments run your backend logic and in most cases you will also\ndevelop a client that uses the backend. If your client is a web app, follow the\n[Hosting and Deployment](/production/hosting/) guide, to learn\nhow to deploy your client and your Convex backend together.\n\nYou can also deploy your backend on its own. Check out the\n[Project Configuration](/production/project-configuration) page to\nlearn more.\n\n## Staging environment[](#staging-environment)\nWith Convex\n[preview deployments](/production/hosting/preview-deployments) your\nteam can test out changes before deploying them to production. If you need a\nmore permanent staging environment, you can use a separate Convex project, and\ndeploy to it by setting the `CONVEX_DEPLOY_KEY`\nenvironment variable when\nrunning\n[ npx convex deploy](/cli#deploy-convex-functions-to-production).\n\n## Typical team development workflow[](#typical-team-development-workflow)\nTeams developing on Convex usually follow this workflow:\n\n- If this is the team's first project, one team member creates a team on the dashboard.\n- One team member creates a project by running\n`npx convex dev`\n, perhaps starting with a[quickstart](/quickstarts)or a[template](https://www.convex.dev/templates). - The team member creates a Git repository from the initial code and shares it with their team (via GitHub, GitLab etc.).\n- Other team members pull the codebase, and get their own dev deployments by\nrunning\n`npx convex dev`\n. - All team members can make backend changes and test them out with their\nindividual dev deployments. When a change is ready the team member opens a\npull-request (or commits to a shared branch).\n[Backup / Restore](//database/backup-restore)can be used to populate a dev deployment with data from a prod deployment.[Data import](/database/import-export/import)can be used to populate a dev deployment with synthetic seed data.- Members of a team with the\n[Pro plan](https://www.convex.dev/plans)can get separate[preview deployments](/production/hosting/preview-deployments)to test each other's pull-requests.\n- Deployment to production can happen\n[automatically](/production/hosting/)when changes get merged to the designated branch (say`main`\n).- Alternatively one of the team members can deploy to production manually by\nrunning\n`npx convex deploy`\n.\n- Alternatively one of the team members can deploy to production manually by\nrunning\n### Making safe changes[](#making-safe-changes)\nEspecially if your app is live you want to make sure that changes you make to your Convex codebase do not break it.\n\nSome unsafe changes are handled and caught by Convex, but others you need handle yourself.\n\n**Schema must always match existing data.**Convex enforces this constraint. You cannot push a schema to a deployment with existing data that doesn't match it, unless you turn off schema enforcement. In general it safe to:- Add new tables to the schema.\n- Add an\n`optional`\nfield to an existing table's schema, set the field on all documents in the table, and then make the field required. - Mark an existing field as\n`optional`\n, remove the field from all documents, and then remove the field. - Mark an existing field as a\n`union`\nof the existing type and a new type, modify the field on all documents to match the new type, and then change the type to the new type.\n**Functions should be backwards compatible.**Even if your only client is a website, and you deploy it together with your backend, your users might still be running the old version of your website when your backend changes. Therefore you should make your functions backwards compatible until you are OK to break old clients. In general it is safe to:- Add new functions.\n- Add an\n`optional`\nnamed argument to an existing function. - Mark an existing named argument as\n`optional`\n. - Mark an existing named argument as a\n`union`\nof the existing type and a new type. - Change the behavior of the function in such a way that given the arguments from an old client its behavior will still be acceptable to the old client.\n**Scheduled functions should be backwards compatible.**When you schedule a function to run in the future, you provide the argument values it will receive. Whenever a function runs, it always runs its currently deployed version. If you change the function between the time it was scheduled and the time it runs, you must ensure the new version will behave acceptably given the old arguments.",
        "metadata": {
            "title": "Deploying Your App to Production | Convex Developer Hub",
            "url": "https://docs.convex.dev/production",
            "hostname": "convex.dev",
            "description": "Convex is built to serve live, production app traffic. Here we cover how to",
            "sitename": "docs.convex.dev",
            "date": "2024-01-01",
            "categories": [],
            "tags": [],
            "image": "https://docs.convex.dev/img/social.png",
            "filedate": "2024-12-01"
        }
    }
]